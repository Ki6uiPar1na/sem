#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<pair<int, string>> vp(n); 
    // first = burst time, second = process ID/name
    for (int i = 0; i < n; i++) {
        cin >> vp[i].second >> vp[i].first;
    }

    // Sort by burst time (non-preemptive SJF)
    sort(vp.begin(), vp.end());

    map<string, int> completionTime; 
    int time = 0;

    for (auto &p : vp) {
        time += p.first; // increment time by burst time
        completionTime[p.second] = time;
    }

    cout << "PID\tCompletion Time\n";
    for (auto &p : vp) {
        cout << p.second << "\t" << completionTime[p.second] << "\n";
    }

    return 0;
}
